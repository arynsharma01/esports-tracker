// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider        = "prisma-client-js"
  engineType      = "library"  // Change this to library or binary
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Team{
  id  String @id @default(uuid())
  name String @unique 
  description String ? 
  Players Player[] 
  image String 
  user User @relation(fields: [userid],references: [id],onDelete: Cascade)
  userid  String
}
model Player{
  id String @id @default(uuid())
  name String
  surname String?
  ign String 
  role String 
  handler String? 

  autor Team @relation(fields: [authorid],references: [id],onDelete: Cascade)
  authorid String
}

model User{
  id String @id @default(uuid())
  name String
  surname String?
  email String @unique
  password String
  team Team[]
  registeredTournaments RegisteredUser[]
  coins Int @default(50)

}

model TournamentInfo {  
  id             String              @id @default(uuid())
  game           String
  description    String
  mode           String
  price          Int
  maxmembers     Int
  registeredUser RegisteredUser[] 
  
}

model RegisteredUser {
  id           Int           @id @default(autoincrement())
  userId       String
  tournamentId String
  tournament   TournamentInfo @relation(fields: [tournamentId], references: [id], onDelete: Cascade)
  user           User             @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Packages{
  id           String    @id @default(uuid())
  coins        Int       
  price        Int
  active       Boolean  

}

